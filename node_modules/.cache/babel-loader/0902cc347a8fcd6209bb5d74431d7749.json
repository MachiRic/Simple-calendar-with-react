{"ast":null,"code":"import _classCallCheck from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport AES from 'crypto-js/aes';\nimport enc from 'crypto-js/enc-utf8';\n\nvar Fetcher =\n/*#__PURE__*/\nfunction () {\n  function Fetcher() {\n    _classCallCheck(this, Fetcher);\n\n    this.events = this.getAllEvents;\n  }\n\n  _createClass(Fetcher, [{\n    key: \"getAllEvents\",\n    value: function getAllEvents() {\n      var httpOptions = {\n        headers: {\n          'x-teamengine-test': \"YfKFyOBnLBvudfn\"\n        }\n      };\n      var url = \"https://projects.teamengine.com/calendar/events\";\n      return fetch(url, httpOptions).then(function (response) {\n        return response.text();\n      });\n    }\n  }, {\n    key: \"processResponse\",\n    value: function processResponse(response) {\n      return JSON.parse(AES.decrypt(response, 'teamengine-key').toString(enc));\n    }\n  }]);\n\n  return Fetcher;\n}();\n\nexport default Fetcher;","map":{"version":3,"sources":["/Users/Matilda/Documents/GitHub/calendar-react/src/fetchfuncs.js"],"names":["AES","enc","Fetcher","events","getAllEvents","httpOptions","headers","url","fetch","then","response","text","JSON","parse","decrypt","toString"],"mappings":";;AACA,OAAOA,GAAP,MAAgB,eAAhB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;IAEMC,O;;;AACF,qBAAc;AAAA;;AACV,SAAKC,MAAL,GAAc,KAAKC,YAAnB;AACH;;;;mCAEc;AACX,UAAMC,WAAW,GAAG;AAChBC,QAAAA,OAAO,EAAE;AAAE,+BAAqB;AAAvB;AADO,OAApB;AAGA,UAAMC,GAAG,oDAAT;AACA,aAAOC,KAAK,CAACD,GAAD,EAAMF,WAAN,CAAL,CAAwBI,IAAxB,CAA6B,UAAAC,QAAQ,EAAI;AAAE,eAAOA,QAAQ,CAACC,IAAT,EAAP;AAAwB,OAAnE,CAAP;AACH;;;oCAEeD,Q,EAAU;AACtB,aAAOE,IAAI,CAACC,KAAL,CAAWb,GAAG,CAACc,OAAJ,CAAYJ,QAAZ,EAAsB,gBAAtB,EAAwCK,QAAxC,CAAiDd,GAAjD,CAAX,CAAP;AAEH;;;;;;AAGL,eAAeC,OAAf","sourcesContent":["\nimport AES from 'crypto-js/aes'\nimport enc from 'crypto-js/enc-utf8'\n\nclass Fetcher {\n    constructor() {\n        this.events = this.getAllEvents\n    }\n\n    getAllEvents() {\n        const httpOptions = {\n            headers: { 'x-teamengine-test': \"YfKFyOBnLBvudfn\" }\n        };\n        const url = `https://projects.teamengine.com/calendar/events`;\n        return fetch(url, httpOptions).then(response => { return response.text() });\n    }\n\n    processResponse(response) {\n        return JSON.parse(AES.decrypt(response, 'teamengine-key').toString(enc));\n\n    }\n\n}\nexport default Fetcher;"]},"metadata":{},"sourceType":"module"}