{"ast":null,"code":"import _classCallCheck from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Matilda/Documents/GitHub/calendar-react/src/Sidebar.js\";\nimport React, { Component } from \"react\";\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calendar).call(this, props));\n    console.log(props);\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"createTable\",\n    value: function createTable(monthNr) {\n      var list = [];\n      var firstDay = new Date(2019, monthNr).getDay();\n\n      while (firstDay.getMonth() == monthNr) {\n        list.push(React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, firstDay.getDate()), this.props.events.map(function (event) {\n          var d = new Date(Date.parse(event.date));\n\n          if (d.toDateString() == firstDay.toDateString()) {\n            return React.createElement(\"div\", {\n              key: event.database_id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 20\n              },\n              __self: this\n            }, React.createElement(\"h2\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            }, event.title));\n          }\n        })));\n        firstDay.setDate(firstDay.getDate() + 1);\n      }\n\n      return list;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // depending on the state we either generate\n      // useful message to the user or show the list\n      this.list = this.props.events.map(function (event) {\n        return React.createElement(\"div\", {\n          key: event.database_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, event.title), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, event.date));\n      });\n      return React.createElement(\"div\", {\n        className: \"events\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.createTable(1)));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/Matilda/Documents/GitHub/calendar-react/src/Sidebar.js"],"names":["React","Component","Calendar","props","console","log","monthNr","list","firstDay","Date","getDay","getMonth","push","getDate","events","map","event","d","parse","date","toDateString","database_id","title","setDate","createTable"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAFe;AAGlB;;;;gCAEWG,O,EAAS;AACjB,UAAIC,IAAI,GAAE,EAAV;AACA,UAAIC,QAAQ,GAAI,IAAIC,IAAJ,CAAS,IAAT,EAAeH,OAAf,CAAD,CAA0BI,MAA1B,EAAf;;AACA,aAAOF,QAAQ,CAACG,QAAT,MAAuBL,OAA9B,EAAuC;AAClCC,QAAAA,IAAI,CAACK,IAAL,CACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,QAAQ,CAACK,OAAT,EAAL,CADJ,EAGQ,KAAKV,KAAL,CAAWW,MAAX,CAAkBC,GAAlB,CAAsB,UAAAC,KAAK,EAAI;AAC5B,cAAIC,CAAC,GAAG,IAAIR,IAAJ,CAASA,IAAI,CAACS,KAAL,CAAWF,KAAK,CAACG,IAAjB,CAAT,CAAR;;AACC,cAAIF,CAAC,CAACG,YAAF,MAAoBZ,QAAQ,CAACY,YAAT,EAAxB,EAAiD;AACzC,mBAAO;AAAK,cAAA,GAAG,EAAEJ,KAAK,CAACK,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAKL,KAAK,CAACM,KAAX,CADG,CAAP;AAGP;AACJ,SAPD,CAHR,CADC;AAaDd,QAAAA,QAAQ,CAACe,OAAT,CAAiBf,QAAQ,CAACK,OAAT,KAAqB,CAAtC;AACH;;AACD,aAAON,IAAP;AACH;;;6BAGQ;AACL;AACA;AACA,WAAKA,IAAL,GAAY,KAAKJ,KAAL,CAAWW,MAAX,CAAkBC,GAAlB,CAAsB,UAAAC,KAAK;AAAA,eACnC;AAAK,UAAA,GAAG,EAAEA,KAAK,CAACK,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKL,KAAK,CAACM,KAAX,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKN,KAAK,CAACG,IAAX,CAFJ,CADmC;AAAA,OAA3B,CAAZ;AAMA,aACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKK,WAAL,CAAiB,CAAjB,CADL,CADJ,CADJ;AAOH;;;;EA7CkBvB,S;;AAgDvB,eAAeC,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Calendar extends Component {\n    constructor(props) {\n        super(props);\n        console.log(props)\n    }\n\n    createTable(monthNr) {\n        let list =[]\n        let firstDay = (new Date(2019, monthNr)).getDay();\n        while (firstDay.getMonth() == monthNr) {\n             list.push(\n            <div>\n                <h5>{firstDay.getDate()}</h5>\n                {\n                    this.props.events.map(event => {\n                       let d = new Date(Date.parse(event.date))\n                        if (d.toDateString() == firstDay.toDateString()) {\n                                return(<div key={event.database_id}>\n                                    <h2>{event.title}</h2>\n                                </div>)\n                        }\n                    })}\n            </div>)\n            firstDay.setDate(firstDay.getDate() + 1)\n        }\n        return list\n    }\n\n\n    render() {\n        // depending on the state we either generate\n        // useful message to the user or show the list\n        this.list = this.props.events.map(event => (\n            <div key={event.database_id}>\n                <h2>{event.title}</h2>\n                <h3>{event.date}</h3>\n            </div>\n        ));\n        return (\n            <div className=\"events\">\n                <div>\n                    {this.createTable(1)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}