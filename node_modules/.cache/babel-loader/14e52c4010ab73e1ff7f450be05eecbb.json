{"ast":null,"code":"import _classCallCheck from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Matilda/Documents/GitHub/calendar-react/src/EventDetail.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nvar EventDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EventDetail, _Component);\n\n  function EventDetail(props) {\n    var _this;\n\n    _classCallCheck(this, EventDetail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventDetail).call(this, props));\n    console.log(window.location.href.split(\"/\"));\n    return _this;\n  }\n\n  _createClass(EventDetail, [{\n    key: \"createTable\",\n    value: function createTable(monthNr) {\n      var list = [];\n      var firstDay = new Date(2019, monthNr);\n\n      while (firstDay.getMonth() == monthNr) {\n        list.push(React.createElement(\"div\", {\n          key: firstDay.getDate(),\n          className: \"calendar-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, firstDay.getDate()), this.props.events.map(function (event) {\n          var d = new Date(Date.parse(event.date));\n\n          if (d.toDateString() == firstDay.toDateString()) {\n            return React.createElement(\"div\", {\n              key: event.database_id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: \"/event/\".concat(event.database_id),\n              style: {\n                textDecoration: \"black\",\n                color: \"black\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22\n              },\n              __self: this\n            }, React.createElement(\"h2\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 23\n              },\n              __self: this\n            }, event.title)));\n          }\n        })));\n        firstDay.setDate(firstDay.getDate() + 1);\n      }\n\n      return list;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // depending on the state we either generate\n      // useful message to the user or show the list\n      return React.createElement(\"div\", {\n        className: \"events\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"calendar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.createTable(1)));\n    }\n  }]);\n\n  return EventDetail;\n}(Component);\n\nexport default EventDetail;","map":{"version":3,"sources":["/Users/Matilda/Documents/GitHub/calendar-react/src/EventDetail.js"],"names":["React","Component","Link","EventDetail","props","console","log","window","location","href","split","monthNr","list","firstDay","Date","getMonth","push","getDate","events","map","event","d","parse","date","toDateString","database_id","textDecoration","color","title","setDate","createTable"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,CAAZ;AAFe;AAGlB;;;;gCAEWC,O,EAAS;AACjB,UAAIC,IAAI,GAAE,EAAV;AACA,UAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAAS,IAAT,EAAeH,OAAf,CAAf;;AACA,aAAOE,QAAQ,CAACE,QAAT,MAAuBJ,OAA9B,EAAuC;AAClCC,QAAAA,IAAI,CAACI,IAAL,CACD;AAAK,UAAA,GAAG,EAAEH,QAAQ,CAACI,OAAT,EAAV;AAA8B,UAAA,SAAS,EAAC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,QAAQ,CAACI,OAAT,EAAL,CADJ,EAGQ,KAAKb,KAAL,CAAWc,MAAX,CAAkBC,GAAlB,CAAsB,UAAAC,KAAK,EAAI;AAC5B,cAAIC,CAAC,GAAG,IAAIP,IAAJ,CAASA,IAAI,CAACQ,KAAL,CAAWF,KAAK,CAACG,IAAjB,CAAT,CAAR;;AACC,cAAIF,CAAC,CAACG,YAAF,MAAoBX,QAAQ,CAACW,YAAT,EAAxB,EAAiD;AACzC,mBAAO;AAAK,cAAA,GAAG,EAAEJ,KAAK,CAACK,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACP,oBAAC,IAAD;AAAM,cAAA,EAAE,mBAAYL,KAAK,CAACK,WAAlB,CAAR;AAAyC,cAAA,KAAK,EAAE;AAAEC,gBAAAA,cAAc,EAAE,OAAlB;AAA2BC,gBAAAA,KAAK,EAAE;AAAlC,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAKP,KAAK,CAACQ,KAAX,CADJ,CADO,CAAP;AAKP;AACJ,SATD,CAHR,CADC;AAeDf,QAAAA,QAAQ,CAACgB,OAAT,CAAiBhB,QAAQ,CAACI,OAAT,KAAqB,CAAtC;AACH;;AACD,aAAOL,IAAP;AACH;;;6BAGQ;AACL;AACA;AACA,aACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKkB,WAAL,CAAiB,CAAjB,CADL,CADJ,CADJ;AAOH;;;;EAzCqB7B,S;;AA4C1B,eAAeE,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass EventDetail extends Component {\n    constructor(props) {\n        super(props);\n        console.log(window.location.href.split(\"/\"))\n    }\n\n    createTable(monthNr) {\n        let list =[]\n        let firstDay = new Date(2019, monthNr);\n        while (firstDay.getMonth() == monthNr) {\n             list.push(\n            <div key={firstDay.getDate()} className=\"calendar-item\">\n                <h5>{firstDay.getDate()}</h5>\n                {\n                    this.props.events.map(event => {\n                       let d = new Date(Date.parse(event.date))\n                        if (d.toDateString() == firstDay.toDateString()) {\n                                return(<div key={event.database_id}>\n                                <Link to={`/event/${event.database_id}`} style={{ textDecoration: \"black\", color: \"black\" }} >\n                                    <h2>{event.title}</h2>\n                                </Link>\n                                </div>)\n                        }\n                    })}\n            </div>)\n            firstDay.setDate(firstDay.getDate() + 1)\n        }\n        return list\n    }\n\n\n    render() {\n        // depending on the state we either generate\n        // useful message to the user or show the list\n        return (\n            <div className=\"events\">\n                <div className=\"calendar-container\">\n                    {this.createTable(1)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default EventDetail;\n"]},"metadata":{},"sourceType":"module"}