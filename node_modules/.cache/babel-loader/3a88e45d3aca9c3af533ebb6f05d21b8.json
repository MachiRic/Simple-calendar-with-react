{"ast":null,"code":"import _classCallCheck from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Matilda/Documents/GitHub/calendar-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Matilda/Documents/GitHub/calendar-react/src/Sidebar.js\";\nimport React, { Component } from \"react\";\nimport Model from \"./EventModel\";\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sidebar).call(this, props));\n    _this.state = {\n      status: \"LOADING\"\n    };\n    return _this;\n  }\n\n  _createClass(Sidebar, [{\n    key: \"getAllEvents\",\n    value: function getAllEvents() {\n      var httpOptions = {\n        headers: {\n          'x-teamengine-test': \"YfKFyOBnLBvudfn\"\n        }\n      };\n      var url = \"https://projects.teamengine.com/calendar/events\";\n      return fetch(url, httpOptions).then(this.processResponse);\n    }\n  }, {\n    key: \"processResponse\",\n    value: function processResponse(response) {\n      var CryptoJS = require(\"crypto-js\");\n\n      if (response.ok) {\n        return CryptoJS.AES.decrypt(response.toString(), 'teamengine-key');\n      }\n\n      throw response;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var CryptoJS = require(\"crypto-js\"); // when data is retrieved we update the state\n      // this will cause the component to re-render\n\n\n      getAllEvents().then(function (events) {\n        _this2.setState({\n          status: \"LOADED\",\n          events: JSON.parse(events.toString(CryptoJS.enc.Utf8))\n        });\n      }).catch(function () {\n        _this2.setState({\n          status: \"ERROR\"\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"The sidebar!\"));\n    }\n  }]);\n\n  return Sidebar;\n}(Component);\n\nexport default Sidebar;","map":{"version":3,"sources":["/Users/Matilda/Documents/GitHub/calendar-react/src/Sidebar.js"],"names":["React","Component","Model","Sidebar","props","state","status","httpOptions","headers","url","fetch","then","processResponse","response","CryptoJS","require","ok","AES","decrypt","toString","getAllEvents","events","setState","JSON","parse","enc","Utf8","catch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,cAAlB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAFgB;AAKjB;;;;mCAEa;AACR,UAAMC,WAAW,GAAG;AAChBC,QAAAA,OAAO,EAAE;AAAE,+BAAqB;AAAvB;AADO,OAApB;AAGN,UAAMC,GAAG,oDAAT;AACA,aAAOC,KAAK,CAACD,GAAD,EAAMF,WAAN,CAAL,CAAwBI,IAAxB,CAA6B,KAAKC,eAAlC,CAAP;AACE;;;oCAEeC,Q,EAAU;AAC3B,UAAIC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,UAAIF,QAAQ,CAACG,EAAb,EAAiB;AACf,eAAOF,QAAQ,CAACG,GAAT,CAAaC,OAAb,CAAqBL,QAAQ,CAACM,QAAT,EAArB,EAA0C,gBAA1C,CAAP;AACD;;AACD,YAAMN,QAAN;AACE;;;wCAEkB;AAAA;;AAClB,UAAIC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB,CADkB,CAElB;AACA;;;AACAK,MAAAA,YAAY,GACTT,IADH,CACQ,UAAAU,MAAM,EAAI;AACd,QAAA,MAAI,CAACC,QAAL,CAAc;AACZhB,UAAAA,MAAM,EAAE,QADI;AAEZe,UAAAA,MAAM,EAAEE,IAAI,CAACC,KAAL,CAAWH,MAAM,CAACF,QAAP,CAAgBL,QAAQ,CAACW,GAAT,CAAaC,IAA7B,CAAX;AAFI,SAAd;AAID,OANH,EAOGC,KAPH,CAOS,YAAM;AACX,QAAA,MAAI,CAACL,QAAL,CAAc;AACZhB,UAAAA,MAAM,EAAE;AADI,SAAd;AAGD,OAXH;AAYD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF;AAKD;;;;EAhDmBL,S;;AAmDtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Model from \"./EventModel\";\n\nclass Sidebar extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        status: \"LOADING\"\n      };\n  }\n\n\tgetAllEvents() {\n        const httpOptions = {\n            headers: { 'x-teamengine-test': \"YfKFyOBnLBvudfn\"}\n          };\n\t\tconst url = `https://projects.teamengine.com/calendar/events`;\n\t\treturn fetch(url, httpOptions).then(this.processResponse);\n\t  }\n\t\n\t  processResponse(response) {\n\t\tvar CryptoJS = require(\"crypto-js\");  \n\t\tif (response.ok) {\n\t\t  return CryptoJS.AES.decrypt(response.toString(), 'teamengine-key');\n\t\t}\n\t\tthrow response;\n\t  }\n\n  componentDidMount() {\n    var CryptoJS = require(\"crypto-js\");\n    // when data is retrieved we update the state\n    // this will cause the component to re-render\n    getAllEvents()\n      .then(events => {\n        this.setState({\n          status: \"LOADED\",\n          events: JSON.parse(events.toString(CryptoJS.enc.Utf8))\n        });\n      })\n      .catch(() => {\n        this.setState({\n          status: \"ERROR\"\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>The sidebar!</p>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}